name: Deploy Piwigo to VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download and Extract Piwigo
        id: download_piwigo
        run: |
          PIWIGO_VERSION="14.0.0" 
          PIWIGO_URL="https://piwigo.org/download/dlcounter.php?code=latest&id=piwigo-${PIWIGO_VERSION}.zip"

          # Install unzip on the runner
          sudo apt-get update && sudo apt-get install unzip -y

          curl -L "${PIWIGO_URL}" -o piwigo.zip
          unzip piwigo.zip -d piwigo-temp
          mkdir -p piwigo/
          mv piwigo-temp/piwigo/* piwigo/
          rm -rf piwigo-temp piwigo.zip

      - name: Upload Piwigo files to VPS using SCP
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "piwigo/"
          target: "/storage/"

      - name: Execute Setup and Configuration Script on VPS
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            # --- START VPS SETUP SCRIPT ---

            # Use php8 as the package prefix based on your confirmation
            PHP_PREFIX="php8"

            # 1. Update and install necessary packages 
            apk update
            # Packages: nginx, php8-fpm (with extensions), mariadb-client, imagemagick
            apk add --no-cache nginx \
              \${PHP_PREFIX}-fpm \
              \${PHP_PREFIX}-mysqli \
              \${PHP_PREFIX}-pdo_mysql \
              \${PHP_PREFIX}-exif \
              \${PHP_PREFIX}-gd \
              \${PHP_PREFIX}-curl \
              \${PHP_PREFIX}-json \
              \${PHP_PREFIX}-session \
              \${PHP_PREFIX}-zlib \
              \${PHP_PREFIX}-iconv \
              \${PHP_PREFIX}-dom \
              mariadb-client \
              imagemagick

            # 2. Configure PHP-FPM
            # Alpine's PHP config path needs to use the correct version directory (e.g., /etc/php8/php-fpm.d/www.conf)
            WWW_CONF="/etc/\${PHP_PREFIX}/php-fpm.d/www.conf"

            # Ensure listen.owner/group are set for Nginx to access the socket
            sed -i 's/^;listen.owner/listen.owner/' \${WWW_CONF}
            sed -i 's/^;listen.group/listen.group/' \${WWW_CONF}

            # 3. Configure Nginx with IPv6 (::) and domain
            # We are writing the config to /etc/nginx/http.d/piwigo.conf as it exists
            cat << 'EOL' > /etc/nginx/http.d/piwigo.conf
            server {
                listen [::]:80;
                server_name insidepumpkin.com; 
                root /storage/piwigo;
                index index.php index.html index.htm;

                location / {
                    try_files \$uri \$uri/ /index.php?\$args;
                }

                location ~ \.php$ {
                    try_files \$uri =404;
                    fastcgi_split_path_info ^(.+\.php)(/.+)\$;
                    # The default socket path for php-fpm in Alpine is usually /run/php-fpm.sock
                    fastcgi_pass unix:/run/php-fpm.sock; 
                    fastcgi_index index.php;
                    include fastcgi.conf;
                    fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
                }
            }
            EOL

            # 4. Permissions
            chown -R nginx:nginx /storage/piwigo

            # 5. Enable and Start Services using OpenRC
            # We use the service name 'php-fpm' and not 'php8-fpm' as the package installs the generic service
            rc-update add php-fpm default 
            rc-update add nginx default

            rc-service php-fpm start
            rc-service nginx start

            echo "Deployment and basic web server setup complete."

            # --- END VPS SETUP SCRIPT ---
